"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8922],{4137:function(n,t,e){e.d(t,{Zo:function(){return p},kt:function(){return s}});var a=e(7294);function r(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function _(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function i(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?_(Object(e),!0).forEach((function(t){r(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):_(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function o(n,t){if(null==n)return{};var e,a,r=function(n,t){if(null==n)return{};var e,a,r={},_=Object.keys(n);for(a=0;a<_.length;a++)e=_[a],t.indexOf(e)>=0||(r[e]=n[e]);return r}(n,t);if(Object.getOwnPropertySymbols){var _=Object.getOwnPropertySymbols(n);for(a=0;a<_.length;a++)e=_[a],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(r[e]=n[e])}return r}var l=a.createContext({}),d=function(n){var t=a.useContext(l),e=t;return n&&(e="function"==typeof n?n(t):i(i({},t),n)),e},p=function(n){var t=d(n.components);return a.createElement(l.Provider,{value:t},n.children)},u={inlineCode:"code",wrapper:function(n){var t=n.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(n,t){var e=n.components,r=n.mdxType,_=n.originalType,l=n.parentName,p=o(n,["components","mdxType","originalType","parentName"]),c=d(e),s=r,m=c["".concat(l,".").concat(s)]||c[s]||u[s]||_;return e?a.createElement(m,i(i({ref:t},p),{},{components:e})):a.createElement(m,i({ref:t},p))}));function s(n,t){var e=arguments,r=t&&t.mdxType;if("string"==typeof n||r){var _=e.length,i=new Array(_);i[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=n,o.mdxType="string"==typeof n?n:r,i[1]=o;for(var d=2;d<_;d++)i[d]=e[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,e)}c.displayName="MDXCreateElement"},5146:function(n,t,e){e.r(t),e.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return s},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return u}});var a=e(3117),r=e(102),_=(e(7294),e(4137)),i=["components"],o={id:"22_embedded_task",slug:"/22_embedded_task",title:"22\u7535\u63a7\u4efb\u52a1",date:new Date("2023-04-01T00:00:00.000Z"),authors:"pansyhou",tags:["stm32"],keywords:["stm32"]},l=void 0,d={unversionedId:"stm32/22_embedded_task",id:"stm32/22_embedded_task",title:"22\u7535\u63a7\u4efb\u52a1",description:"- \u8d85\u6297\uff085\u6708\u5e95\uff09\u524d\uff0c\u6bcf\u4eba\u8d1f\u8d23\u7684\u5175\u79cd\u4ee3\u7801\u67b6\u6784\u8981\u4e86\u89e3\u4e2a\u5927\u6982\uff08\u9ed8\u8ba4\u90fd\u5b66\u4f1a\u4e86FreeRTOS+\u53cc\u73afPID",source:"@site/docs/stm32/22\u7535\u63a7\u4efb\u52a1.md",sourceDirName:"stm32",slug:"/22_embedded_task",permalink:"/docs/22_embedded_task",draft:!1,tags:[{label:"stm32",permalink:"/docs/tags/stm-32"}],version:"current",frontMatter:{id:"22_embedded_task",slug:"/22_embedded_task",title:"22\u7535\u63a7\u4efb\u52a1",date:"2023-04-01T00:00:00.000Z",authors:"pansyhou",tags:["stm32"],keywords:["stm32"]},sidebar:"stm32",previous:{title:"arm\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1\u7b14\u8bb0",permalink:"/docs/arm_dev_note"},next:{title:"\u5347\u7ea7AC6\u7f16\u8bd1\u5668\uff08\u652f\u6301Cmake\uff09",permalink:"/docs/upgrade-your-fuxking-compiler"}},p={},u=[{value:"\u5de5\u7a0b\u62ac\u5347",id:"\u5de5\u7a0b\u62ac\u5347",level:2},{value:"\u9898\u76ee",id:"\u9898\u76ee",level:3},{value:"\u7535\u673a\u5c01\u88c5",id:"\u7535\u673a\u5c01\u88c5",level:3},{value:"PID",id:"pid",level:3},{value:"CAN",id:"can",level:3},{value:"\u521d\u59cb\u5316\u51fd\u6570",id:"\u521d\u59cb\u5316\u51fd\u6570",level:3},{value:"\u4e3b\u51fd\u6570",id:"\u4e3b\u51fd\u6570",level:3}],c={toc:u};function s(n){var t=n.components,e=(0,r.Z)(n,i);return(0,_.kt)("wrapper",(0,a.Z)({},c,e,{components:t,mdxType:"MDXLayout"}),(0,_.kt)("p",null,(0,_.kt)("img",{parentName:"p",src:"https://pic.imgdb.cn/item/63cbbcfabe43e0d30ed26fad.gif",alt:null})),(0,_.kt)("ul",null,(0,_.kt)("li",{parentName:"ul"},"\u8d85\u6297\uff085\u6708\u5e95\uff09\u524d\uff0c\u6bcf\u4eba\u8d1f\u8d23\u7684\u5175\u79cd\u4ee3\u7801\u67b6\u6784\u8981\u4e86\u89e3\u4e2a\u5927\u6982\uff08\u9ed8\u8ba4\u90fd\u5b66\u4f1a\u4e86FreeRTOS+\u53cc\u73afPID"),(0,_.kt)("li",{parentName:"ul"},"\u5e73\u65f6\u6709\u7a7a\u5c31\u6298\u78e8\u4e00\u4e0b\u5e08\u5144\uff0c\u8ba9\u4ed6\u5e03\u7f6e\u70b9pid\u4efb\u52a1\u7ed9\u4f60\u4eec\u4e0a\u624b\u8bd5\u8bd5\uff08\u5de5\u7a0b\u4e4b\u524d\u662f\u628a\u62ac\u5347\u548c\u5c0f\u4e91\u53f0\u7684PID\u4efb\u52a1\u7ed9\u6211\u73a9\u4e86\uff0c\u867d\u7136\u6ca1\u4e0a\u6211\u7684"),(0,_.kt)("li",{parentName:"ul"},"\u51e0\u79cd\u6ee4\u6ce2\u7684\u5b66\u4e60\u4e0e\u4f7f\u7528"),(0,_.kt)("li",{parentName:"ul"},"\u76ee\u524d\u6211\u4eec21\u7ea7\u7535\u63a7\u5bf9\u7b97\u6cd5\u90e8\u5206\u662f\u6709\u7f3a\u5931\u7684\uff0c\u53ea\u6709\u5f20\u5e08\u5144\u4e86\u89e3\u7cfb\u7edf\u8fa8\u8bc6\u548clqr\u90e8\u5206\uff0c\u6709\u80fd\u529b\u8005",(0,_.kt)("strong",{parentName:"li"},"\u5c3d\u5feb\u5b66\u4e60"),"\uff0c\u5bf9\u660e\u5e74\u8c03\u53c2\u6709\u79cd\u91cd\u5927\u610f\u4e49\u3002\u53ef\u80fd\u4f1a\u5728\u6691\u5047\u7559\u6821\u7684\u65f6\u5019\u5e03\u7f6e\u8fd9\u4e2a\u4efb\u52a1"),(0,_.kt)("li",{parentName:"ul"},"\u56db\u5143\u7d20\u89e3\u7b97(\u5728\u6b65\u5175\u82f1\u96c4\u4ee3\u7801\u91cc\u5e94\u8be5\u6709\u5199\uff0cins_task\uff0c\u4e86\u89e3\u4e00\u4e0b\uff1f\u8fd9\u4e2a\u63a7\u5236\u89e3\u7b97\u7b97\u6cd5\u633a\u6709\u610f\u601d\u7684)"),(0,_.kt)("li",{parentName:"ul"},"\u7f3a\u8d44\u6599\u6216\u8005\u6ca1\u60f3\u6cd5\u627e\u6211\u4eec\uff08\u4f18\u8d28\u89e3\u7b54\uff1a\u6211\u4e0d\u77e5\u9053")),(0,_.kt)("p",null,"\u8fd8\u6709\u4e2a\u662f\uff0c\u8c03\u8bd5\u8f6f\u4ef6\u7684\u4f7f\u7528"),(0,_.kt)("ol",null,(0,_.kt)("li",{parentName:"ol"},"jlink+jscope+keil"),(0,_.kt)("li",{parentName:"ol"},"ozone+jlink\uff08\u7528ozone\u53ef\u4ee5\u5b9e\u73b0\u8131\u79bbkeil\uff0c\u6bd4\u5982vscode+\u6709\u4e2a\u4ec0\u4e48\u5d4c\u5165\u5f0f\u63d2\u4ef6\u7684\uff0c\u6216\u8005clion\uff09"),(0,_.kt)("li",{parentName:"ol"},"vofa++\u4e32\u53e3")),(0,_.kt)("h2",{id:"\u5de5\u7a0b\u62ac\u5347"},"\u5de5\u7a0b\u62ac\u5347"),(0,_.kt)("h3",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,_.kt)("blockquote",null,(0,_.kt)("p",{parentName:"blockquote"},"\u60c5\u666f\uff1a\u4f60\u9700\u8981\u901a\u8fc7\u9065\u63a7\u5668\u6447\u6746\u6765\u63a7\u5236\u5de5\u7a0b\u7684\u62ac\u5347\u5e73\u53f0\uff0c\u5728\u6ca1\u6709\u6447\u6746\u8f93\u5165\u91cf\u65f6\uff0c\u62ac\u5347\u5e73\u53f0\u9700\u8981\u4fdd\u6301\u4e4b\u524d\u7684\u4f4d\u7f6e"),(0,_.kt)("p",{parentName:"blockquote"},"\u5b9e\u73b0\u65b9\u6cd5\u5f88\u591a\uff0c\u4f60\u53ef\u4ee5\u8111\u6d1e\u5927\u5f00\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e2a\u51fd\u6570\u6216\u8005\u5229\u7528\u4e0b\u9762\u7684\u6765\u63a7\u5236\u3002")),(0,_.kt)("p",null,"\u6240\u6709\u53ef\u7528\u7684\u5916\u8bbe\u7ed3\u6784\u4f53"),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-c"},"typedef __packed struct\n{\n    Motor_t Lift_Motor;\n\n}Lift_UP_t;\n")),(0,_.kt)("h3",{id:"\u7535\u673a\u5c01\u88c5"},"\u7535\u673a\u5c01\u88c5"),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-c"},"/*\u7535\u673a\u7ed3\u6784\u4f53*/\ntypedef __packed struct\n{\n    uint8_t Pos_Lock;           //\u4f4d\u7f6e\u9501\n    int32_t ExpSpeed;           //\u671f\u671b\u901f\u5ea6\n    float ExpRadian;            //\u671f\u671b\u89d2\u5ea6\n    pid_parameter_t SPID;       //\u901f\u5ea6\u73afPID\n    pid_parameter_t PPID;       //\u4f4d\u7f6e\u73afPID\n    Encoder_t *Encoder;     //\u7801\u76d8\n    MotorType_e MotorType;//\u7535\u673a\u79cd\u7c7b\n    int16_t temp;   //\u6e29\u5ea6\n    int16_t anper;  //\u5f53\u524d\u7535\u6d41\u503c\n    float torque;   //\u529b\u77e9\n\n}Motor_t;\n")),(0,_.kt)("blockquote",null,(0,_.kt)("p",{parentName:"blockquote"},(0,_.kt)("strong",{parentName:"p"},"\u4f60\u8be5\u77e5\u9053"),"\uff1a3508\u80fd\u63d0\u4f9b\u7684\u6570\u636e\u53ea\u6709 ",(0,_.kt)("strong",{parentName:"p"},"\u5c0f\u5708\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u6e29\u5ea6\u3001\u7535\u6d41\u503c"))),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-c"},"/*CAN\u6570\u636e\u5904\u7406-\u7801\u76d8\u5904\u7406*/\ntypedef  __packed  struct {\n    int32_t Encode_Record_Val;//\u7d2f\u79ef\u7801\u76d8\u503c(\u5728\u5c0f\u5708\u5185)\n    int32_t Encode_Actual_Val;//\u771f\u5b9e\u7801\u76d8\u503c(\u4e00\u5927\u5708)\n\n    float Radian;       //\u771f\u5b9e\u5f27\u5ea6\n    float Lock_Radian;\n    float User_Radian;\n    float Total_Radian; //\u8bb0\u5f55\u7684\u5f27\u5ea6\n\n    uint8_t Init_Flag;\n    int16_t Speed[2];    //0\u4e3a\u65e7\u901f\u5ea6\uff0c1\u4e3a\u65b0\u901f\u5ea6\n    int16_t AccSpeed;    //\u52a0\u901f\u5ea6\n    int16_t position;    //\u672a\u5904\u7406\u7684Can\u539f\u59cb\u7801\u76d8\n    int16_t last_position;    //\u672a\u5904\u7406\u7684\u4e0a\u6b21\u7684Can\u539f\u59cb\u7801\u76d8\n    int16_t lap_encoder;      //\u7f16\u7801\u5668\u5355\u5708\u7801\u76d8\u503c\uff088192=12bit\uff09\n    Encoder_Type_e Encoder_Type;//\u7f16\u7801\u5668\u79cd\u7c7b\n    bool_t Block_Detect_Enable; //\u5835\u8f6c\u68c0\u6d4b\u5f00\u542f\u5426\n    STATE_e State;              //\u7535\u673a\u72b6\u6001\n    int16_t gear_Ratio;         //\u51cf\u901f\u6bd4\n    int16_t Max_Block_Angle_Num;//\u5835\u8f6c\u6700\u5927\u89d2\u5ea6\u5bb9\u5fcd\u503c\uff0c\u53ef\u4ee5\u8c03\u6574\u8fd9\u4e2a\u6765\u63a7\u5236\u5835\u8f6c\u7075\u654f\u5ea6\n    int16_t Max_Block_Num;      //\u5835\u8f6c\u8ba1\u6570\u5668\u6700\u5927\u503c\n    int32_t Block_Count;\n    void (*User_Fun)(void);     //\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\n} Encoder_t;\n")),(0,_.kt)("blockquote",null,(0,_.kt)("p",{parentName:"blockquote"},"\u63d0\u793a\uff1a",(0,_.kt)("strong",{parentName:"p"},"Encode_Record_Val\u662f3508\u5c0f\u5708\u7d2f\u52a0\u7684\u4f4d\u7f6e\u6570\u503c"),"\uff0c",(0,_.kt)("strong",{parentName:"p"},"Speed","[1]","\u548cposition"),"\u662fCAN\u63a5\u6536\u5230\u7684\u539f\u751f\u6570\u636e\uff0c\u6240\u6709encoder\u7684\u8ba1\u7b97\u5c06\u5728CAN\u4e2d\u65ad\u4e2d\u5b8c\u6210\uff0c\u4f60\u65e0\u9700\u5173\u5fc3\u600e\u4e48\u5b9e\u73b0\uff0c\u5230\u624b\u5373\u7528\u3002")),(0,_.kt)("h3",{id:"pid"},"PID"),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-c"},'/*************************** Dongguan-University of Technology -ACE**************************\n * @file    pid.h\n * @author  \u90d1\u6770\u701a\n * @version V1.0.3\n * @date    2022/11/19\n * @brief\n ******************************************************************************\n * @verbatim\n *  \u5df2\u7ecf\u628a\u5e38\u7528\u7684pid\u6a21\u5f0f\u90fd\u52a0\u8fdb\u53bb\u4e86\uff0c\u8fd8\u6709\u6ee4\u6ce2\u5668\u4e00\u4e9b\u6ca1\u6709\u5b9e\u73b0\n *  \u4f7f\u7528\u65b9\u6cd5\uff1a\n *      \u5148\u521b\u5efa\u4e00\u4e2apid\u7ed3\u6784\u4f53\u3002\n *      \u521d\u59cb\u5316\uff1a\n *            \u5148\u4f7f\u7528PidInit\uff0c\u6ce8\u610f\u6a21\u5f0f\u662f\u5728\u8fd9\u91cc\u8bbe\u7f6e\uff0c\u7528 | \u94fe\u63a5\n *            \u7136\u540e\u4f7f\u7528PidInitMode\u5c06\u6bcf\u4e2a\u6a21\u5f0f\u9010\u4e2a\u8d4b\u503c\n *      \u4f7f\u7528\uff1aPidCalculate\n *            pid_clear\n *            User_Fun_Callback_Register\n *  demo\uff1a\n *       pid_parameter_t motor6020pid_s;//\u5b9a\u4e49\u4e00\u4e2apid\u7ed3\u6784\u4f53\n *       PidInit(&motor6020pid_s,20,0,0,Output_Limit | Integral_Limit);//\u4f7f\u7528\u8f93\u51fa\u9650\u5e45\u548c\u79ef\u5206\u9650\u5e45\u6a21\u5f0f\n *       PidInitMode(&motor6020pid_s,Integral_Limit,1000,0);//\u79ef\u5206\u9650\u5e45\u6a21\u5f0f\u8bbe\u7f6e\n *      PidInitMode(&motor6020pid_s,Output_Limit,30000,0);//\u8f93\u51fa\u9650\u5e45\u6a21\u5f0f\u8bbe\u7f6e\n *          while(1)\n *          {\n *             ActualValue = sersor();                     //\u83b7\u53d6\u6570\u636e\n *             setvalue  = setclaculate();                 //\u83b7\u53d6\u6570\u636e\n *             PidCalculate(&motor6020pid_s,setvalue,ActualValue);   //\u8ba1\u7b97\n *          }\n *\n * @attention\n *      \u8bf7\u786e\u4fddUser_Fun_Callback_Register\u6ce8\u518c\u4e86\u51fd\u6570\u518d\u4f7f\u7528\u7ed3\u6784\u4f53\u4e2d\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\n *      \u6b7b\u533a\u9ed8\u8ba4\u662f\u4f7f\u7528\u7684\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\uff0c\u4e0d\u7528\u7406\u4f1a\u5c31\u884c\uff0c\u4f7f\u7528\u4e86\u4f1a\u5728\u6b7b\u533a\u5185\u6e05\u9664pid\u3002\n * @version\n * v1.0.1 \u6dfb\u52a0\u4e86\u6b65\u8fdb\u5f0fPID\uff0c\u6240\u6709\u529f\u80fd\u5f85\u9a8c\u8bc1\n * V1.0.2 \u6dfb\u52a0\u4e86\u5f88\u591a\u6ce8\u91ca\uff0cIntegral_Limit \uff0cOutput_Limit \uff0cStepIn\u6a21\u5f0f\u5df2\u9a8c\u8bc1\uff0cDerivative_On_Measurement\u4f3c\u4e4e\u6709\u70b9\u95ee\u9898\n * V1.0.3 \u6dfb\u52a0\u4e86\u79ef\u5206\u548c\u8f93\u51fa\u6ee4\u6ce2\uff0c\u5f85\u9a8c\u8bc1\n ************************** Dongguan-University of Technology -ACE***************************/\n#ifndef __PID_H\n#define __PID_H\n#include "struct_typedef.h"\n#include "stm32f4xx_hal.h"\n\n\ntypedef enum\n{\n    NONE = 0X00,                      // 0000 0000 \u65e0\n    Deadzone = 0x01,                  // 0000 0001 \u6b7b\u533a\n    Integral_Limit = 0x02,            // 0000 0010 \u79ef\u5206\u9650\u5e45\n    Output_Limit = 0x04,              // 0000 0100 \u8f93\u51fa\u9650\u5e45\n    Derivative_On_Measurement = 0x08, // 0000 1000 \u5fae\u5206\u5148\u884c TODO:\n    Separated_Integral = 0x10,        // 0001 0000 \u79ef\u5206\u5206\u79bb\n    ChangingIntegrationRate = 0x20,   // 0010 0000 \u53d8\u79ef\u5206\n    OutputFilter = 0x40,              // 0100 0000 \u8f93\u51fa\u6ee4\u6ce2\n    DerivativeFilter = 0x80,          // 1000 0000 \u5fae\u5206\u6ee4\u6ce2\n    StepIn = 0x0100,                  // 0000 0001 0000 0000 \u6b65\u8fdb\u5f0f\n} PID_mode_e;\n\n//\u4e00\u9636\u4f4e\u901a\u6ee4\u6ce2\u53c2\u6570\ntypedef __packed struct\n{\n    fp32 input;      //\u8f93\u5165\u6570\u636e\n    fp32 last_input; //\u4e0a\u6b21\u6570\u636e\n    fp32 out;        //\u6ee4\u6ce2\u8f93\u51fa\u7684\u6570\u636e\n    fp32 num;        //\u6ee4\u6ce2\u53c2\u6570\n} first_order_filter_t;\n\ntypedef __packed struct Pid_parameter_t // pid\u7ed3\u6784\u4f53\u53d8\u91cf\n{\n    fp32 Kp;\n    fp32 Ki;\n    fp32 Kd;\n\n    fp32 SetValue;\n    fp32 LastSetValue;\n    fp32 LastActualValue;\n    fp32 ActualValue;\n\n    fp32 Ierror;\n    fp32 Pout;\n    fp32 Iout;\n    fp32 Dout;\n    fp32 out;\n\n    fp32 Derror; //\u5fae\u5206\u9879\n    fp32 LastDerror;\n    fp32 LastLastDerror;\n    fp32 error; //\u8bef\u5dee\u9879\n    fp32 LastError;\n\n    fp32 max_out; //\u6700\u5927\u8f93\u51fa\n\n    uint32_t mode; // pid\u6a21\u5f0f\n\n    /* \u79ef\u5206\u9650\u5e45 */\n    fp32 max_Ierror; //\u6700\u5927\u79ef\u5206\u8f93\u51fa\n    /* \u8bef\u5dee\u6b7b\u533a */\n    fp32 deadband;\n    /* \u79ef\u5206\u5206\u79bb */\n    fp32 threshold_max; //\u79ef\u5206\u5206\u79bb\u6700\u5927\u503c\n    fp32 threshold_min; //\u79ef\u5206\u5206\u79bb\u6700\u5c0f\u503c\n    /* \u6297\u79ef\u5206\u9971\u548c */\n    // fp32 maximum; //\u6700\u5927\u503c\n    // fp32 minimum; //\u6700\u5c0f\u503c\n    /* \u53d8\u79ef\u5206 */\n    fp32 errorabsmax; //\u504f\u5dee\u7edd\u5bf9\u503c\u6700\u5927\u503c\n    fp32 errorabsmin; //\u504f\u5dee\u7edd\u5bf9\u503c\u6700\u5c0f\u503c\n    /* \u5fae\u5206\u5148\u884c */\n    fp32 gama; //\u5fae\u5206\u5148\u884c\u6ee4\u6ce2\u7cfb\u6570\n    /* \u5fae\u5206\u6ee4\u6ce2 */\n    first_order_filter_t d_filter; //\u5fae\u5206\u6ee4\u6ce2\u7ed3\u6784\u4f53\n    /* \u8f93\u51fa\u6ee4\u6ce2 */\n    first_order_filter_t out_filter; //\u8f93\u51fa\u6ee4\u6ce2\u7ed3\u6784\u4f53\n\n    /* \u6b65\u8fdb\u6570 */\n    fp32 stepIn;\n\n    void (*User_Fun)(struct Pid_parameter_t *);\n} pid_parameter_t;\n\nvoid PidInit(pid_parameter_t *pid, fp32 kp, fp32 ki, fp32 kd, uint32_t mode);\nvoid PidInitMode(pid_parameter_t *pid, uint32_t mode, fp32 num1, fp32 num2);\nvoid pid_clear(pid_parameter_t *pid);\nvoid User_Fun_Callback_Register(pid_parameter_t *pid, void (*User_Fun)(struct Pid_parameter_t *));\nfp32 PidCalculate(pid_parameter_t *pid, fp32 SetValue, fp32 ActualValue);\n\n')),(0,_.kt)("blockquote",null,(0,_.kt)("p",{parentName:"blockquote"},"\u4e0a\u8ff0\u4e3aPID\u51fd\u6570\u7684\u7ed3\u6784\u4f53\u548c\u51fd\u6570\uff0c\u4f60\u53ef\u4ee5\u5728\u4e3b\u51fd\u6570\u91cc\u4f7f\u7528\u4ed6")),(0,_.kt)("h3",{id:"can"},"CAN"),(0,_.kt)("blockquote",null,(0,_.kt)("p",{parentName:"blockquote"},"CAN\u63a5\u6536\u4e2d\u65ad\u3001\u521d\u59cb\u5316\u5df2\u7ecf\u5199\u597d\uff0c\u4f60\u65e0\u9700\u5173\u5fc3\u3002"),(0,_.kt)("p",{parentName:"blockquote"},"\u62ac\u5347\u7535\u673aCAN Stdid=0x207")),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-c"},'/************************** Dongguan-University of Technology -ACE**************************\n* @file bsp_can.h\n* @brief\n* @author pansyhou\u4faf\u6587\u8f89 (1677195845lyb@gmail.com)\n* @version 1.0\n* @date 2022-07-24\n*\n*\n* @history\n* <table>\n* Date       Version Author Description\n* 2022-07-24   1.0   \u4faf\u6587\u8f89\n* 2022-12-06   2.0   \u4faf\u6587\u8f89\n* @verbatim\n* ==============================================================================\n* \u6587\u4ef6\u5185\u5bb9\u634f\n* ==============================================================================\n* @endverbatim\n************************** Dongguan-University of Technology -ACE***************************/\n\n#ifndef _ECF_BSP_CAN\n#define _ECF_BSP_CAN\n#include "fifo.h"\n#include "can.h"\n\n//CAN\u6211\u65b9\u63a5\u6536ID\ntypedef enum {\n    CAN_CHASSIS_ALL_ID = 0x200,\n    CAN_M3508_MOTOR1_ID = 0x201,    //\u62ac\u5347\u7535\u673a\n    CAN_M3508_MOTOR2_ID = 0x202,    //pitch\n    CAN_M3508_MOTOR3_ID = 0x203,    //roll\n    CAN_M3508_MOTOR4_ID = 0x204,\n    CAN_M3508_MOTOR5_ID = 0x205,\n    CAN_M3508_MOTOR6_ID = 0x206,\n    CAN_M3508_MOTOR7_ID = 0x207,\n    CAN_M3508_MOTOR8_ID = 0x208,\n    CAN_GM6020_MOTOR1_ID = 0x205,\n    CAN_GM6020_MOTOR2_ID = 0x206,\n    CAN_GM6020_MOTOR3_ID = 0x207,\n    CAN_GM6020_MOTOR4_ID = 0x208,\n    CAN_GM6020_MOTOR5_ID = 0x209,\n    CAN_GM6020_MOTOR6_ID = 0x20A,\n    CAN_GM6020_MOTOR7_ID = 0x20B\n} CAN_msg_e;\n\n//CAN\u7535\u8c03\u63a5\u6536\u7aefid\ntypedef enum {\n    C620_OR_C610_1_TO_4_ID = 0x200,\n    C620_OR_C610_5_TO_8_ID = 0x1FF,\n    GM6020_1_TO_4_ID = 0x1FF,\n    GM6020_5_TO_7_ID = 0x2FF,\n} ESC_Receive_Stdid;\n\ntypedef void (*can_stdmsg_rx_callback_t)(CAN_RxHeaderTypeDef *header, uint8_t *data);//\u6570\u636e\u5904\u7406\u6307\u9488\n\n\n// typedef struct can_manage_obj *can_manage_obj_t;\n\n\n//CAN\u7ba1\u7406\u7ed3\u6784\u4f53\ntypedef struct can_manage_obj\n{\n    CAN_HandleTypeDef *hcan;//CAN\u53e5\u67c4\n    fifo_t tx_fifo;    //FIFO\u7ed3\u6784\u4f53\n    uint8_t *tx_fifo_buffer;//FIFO\u7f13\u51b2\u533a\n    uint8_t is_sending;     //CAN\u662f\u5426\u5728\u53d1\u9001\n    can_stdmsg_rx_callback_t can_rec_callback;//\u5bf9\u5e94\u7684CAN\u63a5\u6536\u56de\u8c03\u51fd\u6570\u6307\u9488\n}can_manage_obj;\n\n//CAN\u6570\u636e\u5305\u7ed3\u6784\u4f53\ntypedef struct can_std_msg\n{\n    uint32_t std_id;\n    uint8_t dlc;\n    uint8_t data[8];\n}can_std_msg;\n\n\nextern struct can_manage_obj can1_manage;\nextern struct can_manage_obj can2_manage;\n\n\nextern void ECF_CAN_Init(void);\n\nextern int32_t ECF_CAN_Rx_Callback_Register(can_manage_obj *m_obj, can_stdmsg_rx_callback_t fun);\n\nextern uint32_t ECF_CAN_Send_Msg_FIFO(CAN_HandleTypeDef *hcan, uint16_t std_id, uint8_t *data, uint16_t len);\n\n/**************\u5835\u585e\u5f0f\u53d1\u9001\u51fd\u6570**************/\nextern void ECF_CAN1_Send_Msg_Block(int16_t stdid, uint8_t *data, uint16_t len);\nextern void ECF_CAN2_Send_Msg_Block(int16_t stdid, uint8_t *data, uint16_t len);\n\n/**************\u666e\u901a\u53ef\u80fd\u4f1a\u4e22\u5305\u7684\u53d1\u9001\u51fd\u6570**************/\nextern void ECF_CAN1_Send_Msg_NO_Block(int16_t stdid, uint8_t *data, uint16_t len);\nextern void ECF_CAN2_Send_Msg_NO_Block(int16_t stdid, uint8_t *data, uint16_t len);\n\n//\u9ad8\u7ea7\u5c01\u88c5\u53d1\u9001\u51fd\u6570\uff0c\u53ea\u4e3a\u53d1\u9001\u5230\u7535\u673a \u8be6\u7ec6\u6ce8\u91ca\u770b\u51fd\u6570\u4f53\u5427\nextern void CAN1_C620_OR_C610_201_TO_204_SendMsg(int16_t ESC_201, int16_t ESC_202, int16_t ESC_203, int16_t ESC_204);\n\nextern void CAN1_C620_OR_C610_205_TO_208_SendMsg(int16_t ESC_201, int16_t ESC_202, int16_t ESC_203, int16_t ESC_204);\n\nextern void CAN1_GM6020_1_TO_4_SendMsg(int16_t ESC_201, int16_t ESC_202, int16_t ESC_203, int16_t ESC_204);\n\nextern void CAN1_GM6020_5_TO_8_SendMsg(int16_t ESC_201, int16_t ESC_202, int16_t ESC_203, int16_t ESC_204);\n\nextern void CAN_FIFO_Stress_Watch(void);\n\n#endif\n')),(0,_.kt)("blockquote",null,(0,_.kt)("p",{parentName:"blockquote"},"Bsp can API\u5982\u4e0b\uff0c\u4f60\u53ef\u4ee5\u62e9\u5176\u4e00\u4e2a",(0,_.kt)("strong",{parentName:"p"},"\u9ad8\u7ea7\u5c01\u88c5\u53d1\u9001\u51fd\u6570"),"\u53d1\u9001\u7535\u673a\u7535\u6d41\uff0c\u53ef\u4ee5\u6539\u53d8\u521d\u59cb\u5316\u9009\u62e9\u4ec0\u4e48\u65b9\u5f0f\u53d1\u9001\uff08\u5982fifo\u7b49\u7b49\uff0c\u4ec5\u505a\u4e86\u89e3\uff0c\u5b9e\u9645\u5df2\u7ecf\u521d\u59cb\u5316\u4e86\u3002")),(0,_.kt)("h3",{id:"\u521d\u59cb\u5316\u51fd\u6570"},"\u521d\u59cb\u5316\u51fd\u6570"),(0,_.kt)("blockquote",null,(0,_.kt)("p",{parentName:"blockquote"},"CAN \u63a5\u6536\u4e2d\u65ad\u5df2\u7ecf\u5728main\u51fd\u6570\u91cc\u521d\u59cb\u5316\u597d\u4e86")),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-c"},"//you can add some global variable right here \n\n\nvoid Init(Lift_UP_t *L){\n    //your code add here\n    \n    \n    \n }\n")),(0,_.kt)("h3",{id:"\u4e3b\u51fd\u6570"},"\u4e3b\u51fd\u6570"),(0,_.kt)("p",null,"\u8be5\u51fd\u6570\u4f60\u53ef\u4ee5\u7406\u89e3\u4e3a\u8dd1\u5728main\u51fd\u6570\u7684\u6b7b\u5faa\u73af\u91cc\uff0c\u5165\u53c2\u7684UP_IN\u4e3a\u9065\u63a7\u5668\u6447\u6746\u91cf\uff0c\u8303\u56f4\u5728-660\u81f3660"),(0,_.kt)("pre",null,(0,_.kt)("code",{parentName:"pre",className:"language-c"},"//you can add some global variable right here\n\nvoid Lift_Up_Drive(Lift_UP_t *L,int32_t UP_IN){\n    //your code add here\n    \n    \n    \n}\n")))}s.isMDXComponent=!0}}]);