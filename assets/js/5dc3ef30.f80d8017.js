"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6613],{4137:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return v}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(r),v=o,f=m["".concat(p,".").concat(v)]||m[v]||s[v]||a;return r?n.createElement(f,l(l({ref:t},u),{},{components:r})):n.createElement(f,l({ref:t},u))}));function v(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5658:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return v},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return s}});var n=r(3117),o=r(102),a=(r(7294),r(4137)),l=["components"],i={id:"tree-review",slug:"/tree-review",title:"\u7b80\u4ecb",authors:"pansyhou",date:"2023-7-23",keywords:["guides","C++"]},p=void 0,c={unversionedId:"oi/\u4e8c\u53c9\u6811/tree-review",id:"oi/\u4e8c\u53c9\u6811/tree-review",title:"\u7b80\u4ecb",description:"\u54e5\u4eec\u6765\u590d\u4e60\u4e86\uff0c\u4e8c\u53c9\u6811\u5fd8\u5f97\u8fd8\u662f\u6709\u70b9\u5389\u5bb3\u7684",source:"@site/docs/oi/03-\u4e8c\u53c9\u6811/01-\u7b80\u4ecb.md",sourceDirName:"oi/03-\u4e8c\u53c9\u6811",slug:"/tree-review",permalink:"/docs/tree-review",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"tree-review",slug:"/tree-review",title:"\u7b80\u4ecb",authors:"pansyhou",date:"2023-7-23",keywords:["guides","C++"]},sidebar:"oi",previous:{title:"stl",permalink:"/docs/stl"},next:{title:"53.\u6700\u5927\u5b50\u5e8f\u548c",permalink:"/docs/maximum-subarray"}},u={},s=[{value:"\u4e8c\u53c9\u6811\u7684\u79cd\u7c7b",id:"\u4e8c\u53c9\u6811\u7684\u79cd\u7c7b",level:2},{value:"\u4e2d\u5e8f\u904d\u5386",id:"\u4e2d\u5e8f\u904d\u5386",level:3}],m={toc:s};function v(e){var t=e.components,r=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u54e5\u4eec\u6765\u590d\u4e60\u4e86\uff0c\u4e8c\u53c9\u6811\u5fd8\u5f97\u8fd8\u662f\u6709\u70b9\u5389\u5bb3\u7684"),(0,a.kt)("h2",{id:"\u4e8c\u53c9\u6811\u7684\u79cd\u7c7b"},"\u4e8c\u53c9\u6811\u7684\u79cd\u7c7b"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6ee1\u4e8c\u53c9\u6811\uff1a\u5982\u679c\u4e00\u68f5\u4e8c\u53c9\u6811",(0,a.kt)("strong",{parentName:"li"},"\u53ea\u6709\u5ea6\u4e3a0\u7684\u7ed3\u70b9\u548c\u5ea6\u4e3a2"),"\u7684\u7ed3\u70b9\uff0c\u5e76\u4e14\u5ea6\u4e3a0\u7684\u7ed3\u70b9\u5728\u540c\u4e00\u5c42\u4e0a\uff0c\u5219\u8fd9\u68f5\u4e8c\u53c9\u6811\u4e3a\u6ee1\u4e8c\u53c9\u6811"),(0,a.kt)("li",{parentName:"ol"},"\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u9664\u4e86\u6700\u5e95\u5c42\u8282\u70b9\u53ef\u80fd\u6ca1\u586b\u6ee1\u5916\uff0c\u5176\u4f59\u6bcf\u5c42\u8282\u70b9\u6570\u90fd",(0,a.kt)("strong",{parentName:"li"},"\u8fbe\u5230\u6700\u5927\u503c"),"\uff0c\u5e76\u4e14\u6700\u4e0b\u9762\u4e00\u5c42\u7684\u8282\u70b9\u90fd\u96c6\u4e2d\u5728\u8be5\u5c42",(0,a.kt)("strong",{parentName:"li"},"\u6700\u5de6\u8fb9"),"\u7684\u82e5\u5e72\u4f4d\u7f6e\u3002\u82e5\u6700\u5e95\u5c42\u4e3a\u7b2c h \u5c42\uff08h\u4ece1\u5f00\u59cb\uff09\uff0c\u5219\u8be5\u5c42\u5305\u542b ",(0,a.kt)("strong",{parentName:"li"},"1~ 2^(h-1)")," \u4e2a\u8282\u70b9"),(0,a.kt)("li",{parentName:"ol"},"\u4e8c\u53c9\u641c\u7d22\u6811\uff1a",(0,a.kt)("strong",{parentName:"li"},"\u4e8c\u53c9\u641c\u7d22\u6811\u662f\u4e00\u4e2a\u6709\u5e8f\u6811"),"\u3002",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u82e5\u5b83\u7684\u5de6\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219",(0,a.kt)("strong",{parentName:"li"},"\u5de6\u5b50\u6811"),"\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747",(0,a.kt)("strong",{parentName:"li"},"\u5c0f\u4e8e"),"\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u82e5\u5b83\u7684\u53f3\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219",(0,a.kt)("strong",{parentName:"li"},"\u53f3\u5b50\u6811"),"\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747",(0,a.kt)("strong",{parentName:"li"},"\u5927\u4e8e"),"\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u5b83\u7684\u5de6\u3001\u53f3\u5b50\u6811\u4e5f\u5206\u522b\u4e3a\u4e8c\u53c9\u6392\u5e8f\u6811"))),(0,a.kt)("li",{parentName:"ol"},"\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff1a\u662f\u4e00\u68f5\u7a7a\u6811\u6216\u5b83\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc71\uff0c\u5e76\u4e14\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u90fd\u662f\u4e00\u68f5\u5e73\u8861\u4e8c\u53c9\u6811\u3002")),(0,a.kt)("p",null,"\u524d\u5e8f\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c++"},"struct TreeNode{\n    int val;\n    TreeNode *left;\n    TreeNode *right;\n    TreeNode() : val(0), left(nullptr), right(nullptr) {}\n    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n};\n\nclass Solution {\npublic:\n    void traversal(TreeNode *root, vector<int> &vector1){\n        if(root==NULL)return;\n        vector1.push_back(root->val);\n        traversal(root->left, vector1);\n        traversal(root->right, vector1);\n    }\n\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int> vector1;\n        traversal(root, vector1);\n        return vector1;\n    }\n};\n")),(0,a.kt)("p",null,"\u8fed\u4ee3\u6cd5\u524d\u5e8f\u904d\u5386"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c++"},"    vector<int> preorderTraversal(TreeNode* root) {\n        stack<TreeNode *> stack1;\n        vector<int> vector1;\n        if(root== NULL)return vector1;\n        stack1.push(root);\n        while(!stack1.empty()) {\n            TreeNode *temp = stack1.top();//\u4e2d\u95f4\u5148\u51fa\u6808\n            stack1.pop();//\u5f39\u51fa\n            vector1.push_back(temp->val);\n            if(temp->right!= NULL)stack1.push(temp->right);//\u5148\u585e\u53f3\u8fb9\u7684\uff0c\u51fa\u6765\u7684\u65f6\u5019\u5148\u51fa\u5de6\u8fb9\n            if(temp->left!= NULL)stack1.push(temp->left);\n        }\n        return vector1;\n    }\n")),(0,a.kt)("h3",{id:"\u4e2d\u5e8f\u904d\u5386"},"\u4e2d\u5e8f\u904d\u5386"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c++"},"    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> ans;\n        stack<TreeNode *> stk;\n        TreeNode *temp = root;\n//        if(root== nullptr)return ans;\n//        stk.push(temp);\n        while (temp != NULL || !stk.empty()) {\n            if(temp!= nullptr) {\n                stk.push(temp);\n                temp = temp->left;\n            } else {\n                temp = stk.top();\n                stk.pop();\n                ans.push_back(temp->val);\n//                stk.push(temp->right); \u8fd9\u4e2a\u9519\u4e86\n                temp=temp->right;\n            }\n\n        }\n        return ans;\n    }\n")))}v.isMDXComponent=!0}}]);